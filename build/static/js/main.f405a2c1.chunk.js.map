{"version":3,"sources":["components/History.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["createBrowserHistory","options","key","text","value","Search","location","useState","input","setInput","type","setType","onSubmit","e","preventDefault","History","push","Input","placeholder","action","Select","button","defaultValue","onChange","target","textContent","Button","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAEeA,gBCETC,EAAU,CACd,CAAEC,IAAK,MAAOC,KAAM,MAAOC,MAAO,OAClC,CAAEF,IAAK,SAAUC,KAAM,SAAUC,MAAO,UACxC,CAAEF,IAAK,YAAaC,KAAM,YAAaC,MAAO,aAC9C,CAAEF,IAAK,gBAAiBC,KAAM,gBAAiBC,MAAO,iBACtD,CAAEF,IAAK,gBAAiBC,KAAM,gBAAiBC,MAAO,iBACtD,CAAEF,IAAK,aAAcC,KAAM,aAAcC,MAAO,eAqCnCC,EAlCA,SAACC,GAAa,MAGSC,mBAAS,IAHlB,gCAIDA,mBAAS,KAJR,mBAIpBC,EAJoB,KAIbC,EAJa,OAKHF,mBAAS,OALN,mBAKpBG,EALoB,KAKdC,EALc,OAMKJ,oBAAS,GANd,6BAoB3B,OAEA,sBAAMK,SAbe,SAACC,GACpBA,EAAEC,iBACU,OAARJ,EACFK,EAAQC,KAAK,UAAYN,EAAO,YAAcF,GAC5B,QAATE,GACTK,EAAQC,KAAK,aAAeR,GAG9BC,EAAS,KAKX,SACE,eAACQ,EAAA,EAAD,CAAOP,KAAK,OAAOQ,YAAY,qBAAqBC,QAAM,EAA1D,UACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACpB,QAASA,EAASqB,aAAa,MAAMC,SAAU,SAACV,GAAD,OAAOF,EAAQE,EAAEW,OAAOC,gBACtF,uBAAOf,KAAK,OAAOQ,YAAY,qBAAqBd,MAAOI,EAAOe,SAAU,SAACV,GAAD,OAAOJ,EAASI,EAAEW,OAAOpB,UACrG,cAACsB,EAAA,EAAD,CAAQhB,KAAK,SAASiB,UAAU,uBAAhC,SAAuD,mBAAGA,UAAU,wCCtB3DC,MAXf,WAEE,OAEE,yBAASD,UAAU,iBAAnB,SACE,cAAC,EAAD,OCCSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f405a2c1.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Select, Input } from 'semantic-ui-react';\r\nimport History from './History';\r\n\r\nconst options = [\r\n  { key: 'all', text: 'All', value: 'all' },\r\n  { key: 'series', text: 'Series', value: 'series' },\r\n  { key: 'calendars', text: 'Calendars', value: 'calendars' },\r\n  { key: 'illustrations', text: 'Illustrations', value: 'illustrations' },\r\n  { key: 'announcements', text: 'Announcements', value: 'announcements' },\r\n  { key: 'countdowns', text: 'Countdowns', value: 'countdowns' },\r\n]\r\n\r\nconst Search = (location) => {\r\n\r\n  {/* state */}\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [input, setInput] = useState('');\r\n  const [type, setType] = useState('All');\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  {/* do on form submit */}\r\n  const submitAction = (e) => {\r\n    e.preventDefault();\r\n    if (type != 'All') {\r\n      History.push('/?type=' + type + '&keyword=' + input);\r\n    } else if (type === 'All') {\r\n      History.push('/?keyword=' + input);\r\n    }\r\n\r\n    setInput('');\r\n  }\r\n\r\n  return (\r\n\r\n  <form onSubmit={submitAction}>\r\n    <Input type='text' placeholder='Search any keyword' action>\r\n      <Select button options={options} defaultValue='all' onChange={(e) => setType(e.target.textContent)} />\r\n      <input type=\"text\" placeholder=\"Search any keyword\" value={input} onChange={(e) => setInput(e.target.value)} />\r\n      <Button type='submit' className=\"search-submit-button\"><i className=\"zmdi zmdi-search zmdi-hc-fw\"></i></Button>\r\n    </Input>\r\n  </form>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\n// import { Button, Select, Input } from 'semantic-ui-react';\nimport Search from './components/Search';\n// import History from './components/History';\n\nfunction App() {\n\n  return (\n\n    <section className='search-wrapper'>\n      <Search />\n    </section>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}